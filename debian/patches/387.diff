diff --git a/libexec/bats-core/bats b/libexec/bats-core/bats
index c7b448d297..0b549839c9 100755
--- a/libexec/bats-core/bats
+++ b/libexec/bats-core/bats
@@ -69,6 +69,7 @@ expand_path() {
 }
 
 BATS_LIBEXEC="$(dirname "$(bats_readlinkf "${BASH_SOURCE[0]}")")"
+export BATS_LIBEXEC
 export BATS_CWD="$PWD"
 export BATS_TEST_PATTERN="^[[:blank:]]*@test[[:blank:]]+(.*[^[:blank:]])[[:blank:]]+\{(.*)\$"
 export BATS_TEST_PATTERN_COMMENT="[[:blank:]]*([^[:blank:]()]+)[[:blank:]]*\(?\)?[[:blank:]]+\{[[:blank:]]+#[[:blank:]]*@test[[:blank:]]*\$"
diff --git a/libexec/bats-core/bats-exec-file b/libexec/bats-core/bats-exec-file
index 8ad79a03be..372c6460da 100755
--- a/libexec/bats-core/bats-exec-file
+++ b/libexec/bats-core/bats-exec-file
@@ -193,7 +193,7 @@ bats_run_tests_in_parallel() {
       ((++test_number_in_file))
       mkdir -p "$output_folder/$test_number_in_suite"
       bats_semaphore_run "$output_folder/$test_number_in_suite" \
-                          bats-exec-test "${flags[@]}" "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" \
+                          "$BATS_LIBEXEC/bats-exec-test" "${flags[@]}" "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" \
                           > "$output_folder/$test_number_in_suite/pid"
     fi
     # print results early to get interactive feedback
@@ -239,9 +239,9 @@ bats_run_tests() {
         ((++test_number_in_file))
         # deal with empty flags to avoid spurious "unbound variable" errors on Bash 4.3 and lower
         if [[ "${#flags[@]}" -gt 0 ]]; then
-          bats-exec-test "${flags[@]}" "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" || status=1
+          "$BATS_LIBEXEC/bats-exec-test" "${flags[@]}" "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" || status=1
         else
-          bats-exec-test "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" || status=1
+          "$BATS_LIBEXEC/bats-exec-test" "$filename" "$test_name" "$test_number_in_suite" "$test_number_in_file" || status=1
         fi
       fi
     done
diff --git a/test/bats.bats b/test/bats.bats
index 5ea8f72279..95cf591f25 100755
--- a/test/bats.bats
+++ b/test/bats.bats
@@ -701,3 +701,9 @@ END_OF_ERR_MSG
   [ "${lines[5]}" = 'ok 5 should_be_found_with_function_and_parens' ]
   [ "${lines[6]}" = 'ok 6 should_be_found_with_function_parens_and_whitespace' ]
 }
+
+@test "test works even if PATH is reset" {
+  run bats "$FIXTURE_ROOT/update_path_env.bats"
+  [ "$status" -eq 1 ]
+  [ "${lines[4]}" = "# /usr/local/bin:/usr/bin:/bin" ]
+}
diff --git a/test/fixtures/bats/update_path_env.bats b/test/fixtures/bats/update_path_env.bats
new file mode 100644
index 0000000000..4a8959c871
--- /dev/null
+++ b/test/fixtures/bats/update_path_env.bats
@@ -0,0 +1,6 @@
+PATH="/usr/local/bin:/usr/bin:/bin"
+
+@test "PATH is reset" {
+  echo "$PATH"
+  false
+}
